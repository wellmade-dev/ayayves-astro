---
import {
	fetchSingleTypeObject,
	createImageObject,
	fetchCatalogue,
} from "../../scripts/fetch";

import ImageWellmade from "../atoms/ImageWellmade.astro";
import ReleaseCard from "../atoms/cards/ReleaseCard.astro";

const image = await fetchSingleTypeObject("homepage", "catalogue_hero_image");
const backgroundImage = createImageObject(image);
const catalogue = await fetchCatalogue();
---

<section class="section-catalogue">
	<div class="sticky-w">
		<div class="image-w">
			<div class="background-img">
				<div class="bg-tint"></div>
				<ImageWellmade image={backgroundImage} sizes="100vw" />
			</div>
		</div>
	</div>
	<div class="catalogue-w">
		{
			catalogue.map((release) => (
				<div class="release-w">
					<div class="release-card-w">
						<ReleaseCard release={release} />
					</div>
				</div>
			))
		}
	</div>
</section>

<style lang="scss">
	@use "../../styles/vars" as *;

	.section-catalogue {
		margin: -20vh auto 0;
		width: 100%;
		display: flex;
		align-items: top;
		justify-content: center;
		flex-direction: column;

		.sticky-w {
			height: 200vh;
			position: sticky;
			top: 0;

			.image-w {
				height: 100vh;
				width: 100%;
				display: flex;
				align-items: center;
				justify-content: center;
				position: sticky;
				top: 0;
			}

			.background-img {
				width: 27.5vw;
				height: 32.5vh;
				border-radius: var(--radius-medium);
				overflow: clip;
				position: relative;
				will-change: transform;

				@media (max-width: $tablet) {
					width: 39vw;
					height: unset;
					aspect-ratio: 1 / 1.3;
				}

				@media (max-width: $phablet) {
					width: 44vw;
				}

				@media (max-width: $mobile) {
					width: 55vw;
					aspect-ratio: 1 / 1.3;
				}

				img {
					position: absolute;
					top: 0;
					left: 0;
					bottom: auto;
					right: 0;
					height: 160%;
					width: 100%;
				}

				.bg-tint {
					position: absolute;
					top: 0;
					left: 0;
					bottom: 0;
					right: 0;
					height: 100%;
					width: 100%;
					background-color: black;
					opacity: 0.5;
					z-index: 1;
					pointer-events: none;
					will-change: opacity;
				}
			}
		}

		.catalogue-w {
			display: flex;
			justify-content: flex-start;
			align-items: flex-start;
			flex-direction: column;
			min-height: 100vh;
			padding-bottom: 50vh;

			.release-w {
				display: flex;
				width: 100%;
				padding: 0 calc(2 * var(--page-margin));
				margin-bottom: 27.5vh;

				&:nth-child(4n + 1) {
					padding-left: 10vw;
				}

				&:nth-child(4n + 2) {
					justify-content: flex-end;
					padding-right: 20vw;
				}

				&:nth-child(4n + 3) {
					padding-left: 20vw;
				}

				&:nth-child(4n + 4) {
					justify-content: flex-end;
					padding-right: 9vw;
				}

				@media (max-width: $desktop) {
					margin-bottom: 35vh;
				}

				@media (max-width: $tablet) {
					margin-bottom: 40vh;

					&:nth-child(4n + 1) {
						padding-left: 9vw;
					}

					&:nth-child(4n + 2) {
						justify-content: flex-end;
						padding-right: 8vw;
					}

					&:nth-child(4n + 3) {
						padding-left: 16vw;
					}

					&:nth-child(4n + 4) {
						justify-content: flex-end;
						padding-right: 16vw;
					}
				}

				@media (max-width: $phablet) {
					margin-bottom: 45vh;

					&:nth-child(4n + 1) {
						padding-left: 7vw;
					}

					&:nth-child(4n + 2) {
						justify-content: flex-end;
						padding-right: 8vw;
					}

					&:nth-child(4n + 3) {
						padding-left: 13vw;
					}

					&:nth-child(4n + 4) {
						justify-content: flex-end;
						padding-right: 10vw;
					}
				}

				@media (max-width: $mobile) {
					margin-bottom: 45vh;

					&:nth-child(4n + 1) {
						padding-left: calc(var(--page-margin) + 5vw);
					}

					&:nth-child(4n + 2) {
						padding-right: calc(var(--page-margin) + 2vw);
					}

					&:nth-child(4n + 3) {
						padding-left: 7vw;
					}

					&:nth-child(4n + 4) {
						padding-right: 7vw;
					}
				}
			}
		}

		.release-card-w {
			width: 18rem;
			aspect-ratio: 1 / 1.4;

			@media (max-width: $phablet) {
				width: 17rem;
				padding: 1.25rem 1.125rem;
			}

			@media (max-width: $mobile) {
				width: 65vw;
				max-width: 18rem;
				aspect-ratio: 1 / 1.35;
			}
		}
	}
</style>

<script>
	import gsap from "gsap";
	import { imageParallax } from "../../scripts/animations";

	function initCatalogueSection() {
		const catalogueSection = document.querySelector(".section-catalogue");

		if (catalogueSection) {
			const sticky = catalogueSection.querySelector(".sticky-w");
			const image = catalogueSection.querySelector(".background-img");
			const tint = catalogueSection.querySelector(".bg-tint");
			const releaseWrapper =
				catalogueSection.querySelector(".catalogue-w");
			const img = image?.querySelector("img");
			const releaseCards =
				catalogueSection.querySelectorAll(".release-card");

			// Background Image Window Moves and Expands
			const sectionTimeline = gsap.timeline({
				scrollTrigger: {
					trigger: sticky,
					start: "top 20%",
					end: "bottom bottom",
					scrub: true,
				},
			});

			sectionTimeline
				.to(
					image,
					{ width: "100vw", height: "100vh", ease: "power1.inOut" },
					"start"
				)
				.to(image, { borderRadius: 0, ease: "power4.in" }, "start")
				.fromTo(
					tint,
					{ opacity: 0 },
					{ opacity: 0.5, ease: "power1.in" },
					"start"
				);

			const releaseTimeline = gsap.timeline({
				scrollTrigger: {
					trigger: releaseWrapper,
					start: "top bottom",
					end: "bottom top",
					scrub: true,
				},
			});

			if (img) {
				releaseTimeline.fromTo(
					img,
					{ y: "0%" },
					{ y: "-35%" },
					"start"
				);
			}

			// Background Image Parallax
			imageParallax(img, "top bottom", "center center", "-10%", "0%");

			// Parallax on Release Tile Images
			releaseCards.forEach((releaseTile) => {
				imageParallax(
					releaseTile.querySelector("img"),
					"top bottom",
					"bottom top",
					"0%",
					"-15%"
				);
			});
		}
	}
	initCatalogueSection();
</script>
