---
import StarSVG from "../svgs/StarSVG.astro";

interface Props {
  label: string;
  ariaLabel: string;
  href?: string;
  button?: boolean;
}

const { label, ariaLabel, href, button } = Astro.props as Props;
---

{
  button ? (
    <button class="button--display" aria-label={ariaLabel}>
      <span>
        <div class="star-w">
          <StarSVG width="1rem" />
        </div>
        <div class="label">{label}</div>
        <div class="star-w">
          <StarSVG width="1rem" />
        </div>
      </span>
    </button>
  ) : (
    <a class="button--display link" aria-label={ariaLabel} href={href}>
      <div class="star-w">
        <StarSVG width="1rem" />
      </div>
      <div class="label">{label}</div>
      <div class="star-w">
        <StarSVG width="1rem" />
      </div>
    </a>
  )
}

<style lang="scss">
  .button--display {
    $padding: 0.15rem;
    $padding-right: 1.5rem;
    $star-width: 3rem;

    &.button--display {
      border: 1px solid var(--button-glass-outline);
      color: 1px solid var(--text);
      background-color: var(--button-glass-bg);
      border-radius: var(--radius-circular);
    }

    &.link,
    span {
      display: flex;
      gap: 1rem;
      justify-content: center;
      align-items: center;
      padding: $padding $padding $padding $padding-right;
      justify-self: start;
    }

    transition: all 0.25s;
    position: relative;
    overflow: clip;
    letter-spacing: -0.02em;
    font-family: var(--editorial-old);
    font-size: 1.6rem;
    font-style: italic;
    font-weight: 200;
    line-height: 100%;
    cursor: pointer;

    .star-w,
    .label {
      transition: transform 0.3s var(--easing-small);
    }

    &:hover {
      border-color: var(--button-solid-bg);
      background-color: var(--button-glass-hover);

      .star-w {
        transform: translateX(calc($star-width + $padding));
      }

      .label {
        transform: translateX(calc($star-width - ($padding * 2)));
      }
    }

    .label {
      padding-bottom: 0.05rem;
    }

    .star-w {
      display: flex;
      width: $star-width;
      aspect-ratio: 1 / 1;
      background-color: var(--button-solid-bg);
      color: var(--button-solid-text);
      border-radius: var(--radius-circular);
      flex: none;
      justify-content: center;
      align-items: center;

      &:nth-child(1) {
        position: absolute;
        top: auto;
        bottom: auto;
        left: -3rem;
        right: auto;
      }
    }
  }
</style>
