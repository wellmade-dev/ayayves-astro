---
import StarSVG from "../svgs/StarSVG.astro";

interface CommonProps {
	label: string;
	ariaLabel?: string;
	href?: string;
}

interface ButtonProps extends CommonProps {
	elementType: "button";
	ariaLabel: string;
}

interface LinkProps extends CommonProps {
	elementType: "link";
	ariaLabel: string;
	href: string;
}

interface DivProps extends CommonProps {
	elementType: "div";
}

type Props = ButtonProps | LinkProps | DivProps;

const { label, ariaLabel, href, elementType } = Astro.props as Props;
---

{
	elementType === "button" ? (
		<button class="button--display secondary" aria-label={ariaLabel}>
			<span>
				<div class="star-w">
					<StarSVG width="0.75rem" />
				</div>
				<div class="label">{label}</div>
				<div class="star-w">
					<StarSVG width="0.75rem" />
				</div>
			</span>
		</button>
	) : elementType === "div" ? (
		<div class="button--display secondary">
			<div class="star-w">
				<StarSVG width="0.75rem" />
			</div>
			<div class="label">{label}</div>
			<div class="star-w">
				<StarSVG width="0.75rem" />
			</div>
		</div>
	) : (
		<a class="button--display secondary" aria-label={ariaLabel} href={href}>
			<div class="star-w">
				<StarSVG width="0.75rem" />
			</div>
			<div class="label">{label}</div>
			<div class="star-w">
				<StarSVG width="0.75rem" />
			</div>
		</a>
	)
}

<style lang="scss">
	$padding: 0.1rem;
	$padding-right: 1rem;
	$star-width: 1.75rem;

	.button--display.secondary {
		gap: 0.575rem;
		border: 1px solid var(--button-glass-outline);
		color: var(--text);
		background-color: rgba(1, 10, 14, 0);
		border-radius: var(--radius-circular);
		justify-content: center;
		align-items: center;
		align-self: flex-start;
		padding: 0.0875rem $padding $padding $padding-right;
		transition: all 0.25s;
		display: flex;
		position: relative;
		overflow: clip;
		transform: translate(0);
		font-family: var(--neue-montreal);
		font-size: 0.875rem;
		font-style: unset;

		.star-w,
		.label {
			transition: transform 0.225s var(--easing-small);
		}

		&:hover {
			border-color: var(--button-solid-bg);
			background-color: var(--button-glass-hover);
			color: var(--text);

			.star-w {
				transform: translateX(calc($star-width + $padding));
			}

			.label {
				transform: translateX(
					calc($star-width - ($padding * 2) - 0.1rem)
				);
			}
		}

		.label {
			padding-bottom: 0.05rem;
		}

		.star-w {
			width: $star-width;
			aspect-ratio: 1 / 1;
			background-color: var(--button-solid-bg);
			color: var(--button-solid-text);
			border-radius: var(--radius-circular);
			flex: none;
			justify-content: center;
			align-items: center;
			display: flex;

			&:nth-child(1) {
				position: absolute;
				top: auto;
				bottom: auto;
				left: -1.75rem;
				right: auto;
			}
		}
	}
</style>
